@page "/personaMud"

@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@inject IDataAccess _data
@inject IConfiguration _config


<div style="max-width: 500px;">
    <MudCard>
        <EditForm Model="@OPersona">
            <MudCardContent>
                <MudContainer MaxWidth="MaxWidth.Medium">
                    <MudForm Tag="OPersona" @ref="form" @bind-IsValid="success" @bind-Errors="@errors">

                        <MudTextField T="string" Label="Cedula" @bind-Value="@OPersona.Cedula" Required="true" RequiredError="User name is required!" />
                        <MudTextField T="string" Label="Nombre" @bind-Value="@OPersona.Nombre" Required="true" RequiredError="Email is required!" />
                        <MudTextField T="string" Label="Apellido" @bind-Value="@OPersona.Apellido" Required="true" RequiredError="User name is required!" />
                        <MudTextField T="string" Label="Telefono" @bind-Value="@OPersona.Telefono" Required="true" RequiredError="Email is required!" />
                        @*<MudItem xs="12" sm="6" md="4">
                            <MudDatePicker Label="Basic example (editable)" Editable="true" @bind-PickerMonth="@OPersona.FechaNacimiento" />
                        </MudItem>*@
                        <MudItem>
                            <MudSelect Style=""  T="int" Label="Provincia" @bind-Value="@OPersona.ProvinciaID">

                                @if (_cboProvincia != null)
                                {

                                    @foreach (var p in _cboProvincia)
                                    {
                                        <MudSelectItem Value="@p.ID_Provincia">@p.Nombre</MudSelectItem>
                                    }

                                }
                                else
                                {
                                    <MudSelectItem Value="1">--blank--</MudSelectItem>
                                }


                            </MudSelect>
                        </MudItem>
                        <MudItem >
                            <MudSelect T="int" Label="Zigno Zodiacal" @bind-Value="@OPersona.SignoZodid">

                                @if (_cboProvincia != null)
                                {

                                    @foreach (var p in _cboSignoZod)
                                    {
                                        <MudSelectItem Value="@p.ID_SIGNO_Zodiacal">@p.Nombre</MudSelectItem>
                                    }

                                }
                                else
                                {
                                    <MudSelectItem Value="1">--blank--</MudSelectItem>
                                }


                            </MudSelect>
                        </MudItem>
                        <MudCardActions>
                            <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!success)" OnClick="InsertData" Class="ml-auto">Registrar</MudButton>
                        </MudCardActions>
                    </MudForm>
                </MudContainer>
            </MudCardContent>
        </EditForm>
    </MudCard>
</div>


@code{
    bool success;
    string[] errors = { };
    MudTextField<string> pwField1;
    MudForm form;

    private Persona_Model OPersona = new();

    private static bool ModoEditar = false;



    List<dynamic> personas;
    private List<ComboBoxProvinciaModel> _cboProvincia;
    private List<ComboBoxSignoZodModel> _cboSignoZod;


    int AnswerServer;




    private async Task LoadEditar(string Cedula)
    {

        string query = "SELECT * FROM PERSONAS WHERE Cedula = @Cedula";

        OPersona = await _data.LoadObject<Persona_Model, dynamic>(query, new { Cedula = Cedula }, _config.GetConnectionString("default"));


    }

    private async Task InsertData()
    {
        string query = "Insert into PERSONAS (CEDULA,NOMBRE,APELLIDO,TELEFONO,FECHANACIMIENTO,PROVINCIAID,SIGNOZODID) values (@Cedula,@Nombre,@Apellido,@Telefono,@FechaNacimiento,@ProvinciaId,@SignoZodid)";

        AnswerServer = await _data.SaveData<dynamic>(query, OPersona, _config.GetConnectionString("default"));
        OnInitialized();
    }

    private async Task UpdateData()
    {
        string query = "Update Personas set Nombre=@Nombre,Apellido=@Apellido,Telefono=@Telefono,FechaNacimiento=@FechaNacimiento,ProvinciaId=@ProvinciaId,SIGNOZODID=@SignoZodid Where Cedula= @Cedula";
        AnswerServer = await _data.SaveData<Persona_Model>(query, OPersona, _config.GetConnectionString("default"));
        await OnInitializedAsync();
    }

    private async Task DeleteData(dynamic Persona)
    {
        string query = "Delete Personas Cedula= @Cedula";
        AnswerServer = await _data.SaveData(query, new { Cedula = Persona.CEDULA }, _config.GetConnectionString("default"));
        await OnInitializedAsync();
    }

    protected override async Task OnInitializedAsync()
    {
        string query = "SELECT * from vwPersonas";
        personas = await _data.LoadData<dynamic, dynamic>(query, new { }, _config.GetConnectionString("default"));

        query = "SELECT ID_Provincia, Nombre FROM PROVINCIAS";

        _cboProvincia = await _data.LoadData<ComboBoxProvinciaModel, dynamic>(query, new { }, _config.GetConnectionString("default"));

        query = "SELECT ID_SIGNO_Zodiacal, Nombre FROM SIGNO_ZODIACAL";

        _cboSignoZod = await _data.LoadData<ComboBoxSignoZodModel, dynamic>(query, new { }, _config.GetConnectionString("default"));
    }



}
