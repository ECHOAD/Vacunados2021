@page "/vacunados"
@inject IDataAccess _data
@inject IConfiguration _config

@if (personas == null)
{
    <p>Loading...</p>
}
else
{
    <div class="container-fluid">
        <div class="row">

            <div class="col-12">
                <table class="table">
                    <thead class="thead-dark">
                        <tr>
                            <th scope="col">Cedula</th>
                            <th scope="col">Nombres</th>
                            <th scope="col">Apellido</th>
                            <th scope="col">Telefono</th>
                            <th scope="col">Signo Zodiacal</th>
                            <th scope="col">Provincia</th>
                            <th scope="col">Acciones</th>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var p in personas)
                        {
                            <tr>
                                <td>@p.CEDULA</td>
                                <td>@p.NOMBRE</td>
                                <td>@p.APELLIDO</td>
                                <td>@p.TELEFONO</td>
                                <td>@p.SIGNOZODIACAL</td>
                                <td>@p.PROVINCIA</td>
                                <td>
                                    <button class="btn btn-primary" @onclick="() => LoadEditar(p.CEDULA)"><i class="bi-pencil-fill"></i></button>
                                    <button class="btn btn-danger" @onclick="() => DeleteData(p)"><i class="bi bi-x-octagon-fill"></i></button>
                                </td>

                            </tr>
                        }
                    </tbody>
                </table>
            </div>

        </div>
    </div>




}



@code {

    private Persona_Model OPersona = new();

    private static bool ModoEditar = false;



    List<dynamic> personas;
    private List<ComboBoxProvinciaModel> _cboProvincia;
    private List<ComboBoxSignoZodModel> _cboSignoZod;


    int AnswerServer;




    private async Task LoadEditar(string Cedula)
    {

        string query = "SELECT * FROM PERSONAS WHERE Cedula = @Cedula";

        OPersona = await _data.LoadObject<Persona_Model, dynamic>(query, new { Cedula = Cedula }, _config.GetConnectionString("default"));


    }

    private async Task InsertData()
    {
        string query = "Insert into PERSONAS (CEDULA,NOMBRE,APELLIDO,TELEFONO,FECHANACIMIENTO,PROVINCIAID,SIGNOZODID) values (@Cedula,@Nombre,@Apellido,@Telefono,@FechaNacimiento,@ProvinciaId,@SignoZodid)";

        AnswerServer = await _data.SaveData<dynamic>(query, OPersona, _config.GetConnectionString("default"));
        OnInitialized();
    }

    private async Task UpdateData()
    {
        string query = "Update Personas set Nombre=@Nombre,Apellido=@Apellido,Telefono=@Telefono,FechaNacimiento=@FechaNacimiento,ProvinciaId=@ProvinciaId,SIGNOZODID=@SignoZodid Where Cedula= @Cedula";
        AnswerServer = await _data.SaveData<Persona_Model>(query, OPersona, _config.GetConnectionString("default"));
        await OnInitializedAsync();
    }

    private async Task DeleteData(dynamic Persona)
    {
        string query = "Delete Personas Cedula= @Cedula";
        AnswerServer = await _data.SaveData(query, new { Cedula = Persona.CEDULA }, _config.GetConnectionString("default"));
        await OnInitializedAsync();
    }

    protected override async Task OnInitializedAsync()
    {
        string query = "SELECT * from vwPersonas";
        personas = await _data.LoadData<dynamic, dynamic>(query, new { }, _config.GetConnectionString("default"));

        query = "SELECT ID_Provincia, Nombre FROM PROVINCIAS";

        _cboProvincia = await _data.LoadData<ComboBoxProvinciaModel, dynamic>(query, new { }, _config.GetConnectionString("default"));

        query = "SELECT ID_SIGNO_Zodiacal, Nombre FROM SIGNO_ZODIACAL";

        _cboSignoZod = await _data.LoadData<ComboBoxSignoZodModel, dynamic>(query, new { }, _config.GetConnectionString("default"));
    }




}